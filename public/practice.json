{
  "triangle": {
    "codes": [
      {
        "version": "1.0",
        "description": "该版本程序在检验输入合法性后，先判断能否构成三角形，之后判断等腰三角形，再判断等边三角形和普通三角形。由于先判断等腰而后判断等边，会错误地将等边三角形的输入判断为等腰三角形。",
        "code": "triangle_1.0.cpp"
      },
      {
        "version": "2.0",
        "description": "该版本程序修复了1.0版本中等边判断错误的问题。",
        "code": "triangle_2.0.cpp"
      }
    ],
    "tests": [
      {
        "method": "基本边界值",
        "testcases": "triangle_basic_boundary.csv"
      },
      {
        "method": "健壮边界值",
        "testcases": "triangle_robust_boundary.csv"
      },
      {
        "method": "等价类划分",
        "testcases": "triangle_equivalence.csv"
      }  
    ]
  },
  "calender": {
    "codes": [
      {
        "version": "1.0",
        "description": "首先判断用户输入的年月日是否合法，时间是否在业务规定的范围内，接着计算输入日期的下一天，最后以xxxx年xx月xx日的格式输出下一天的日期。",
        "code": "calender_1.0.cpp"
      },
      {
        "version": "0.1",
        "description": "这个版本的程序注入了一个错误，它在处理400倍闰年的时候没有正确判断，在2月28号上会出错。",
        "code": "calender_0.1.cpp"
      }
    ],
    "tests": [
      {
        "method": "边界值分析",
        "testcases": "calender_boundary.csv"
      },
      {
        "method": "等价类划分",
        "testcases": "calender_equivalence.csv"
      },
      {
        "method": "决策表设计",
        "testcases": "calender_decision.csv"
      }
    ]
  },
  "telefee": {
    "codes": [
      {
        "version": "1.0",
        "description": "首先根据用户输入的本月通话分钟数，将其划分到不同的区间，从而确定该区间对应的最大容许未按时缴费次数和初始折扣率；接着将用户实际的未按时缴费次数与允许值进行比较，如果超出则取消折扣；然后按照\"通话分钟数×0.15 元/分钟\"计算实际通话费，并在此基础上根据折扣率计算折扣后通话费；最后将固定的基本月租费 25 元与折扣后通话费相加，得到当月总费用并输出。",
        "code": "telefee_1.0.cpp"
      }
    ],
    "tests": [
      { "method": "边界值分析", "testcases": "telefee_boundary.csv" },
      { "method": "等价类划分", "testcases": "telefee_equivalence.csv" },
      { "method": "决策表设计", "testcases": "telefee_decision.csv" },
      { "method": "最优测试用例", "testcases": "telefee_best.csv" }
    ]
  },
  "whitebox": {
    "codes": [
      {
        "version": "1.0",
        "description": "首先根据用户输入的本月销售额、请假天数和现金支付比例，将其划分到不同的条件分支，从而确定佣金因子（分母）和初始佣金计算规则；接着根据是否满足高销售额、高现金比例和低请假天数的组合，判断用户是否可以获得最优佣金比例，或在不满足条件时给予较低比例或不发放佣金；然后按照“销售额 ÷ 佣金因子”的方式计算实际佣金金额；最后判断佣金是否为整数，若是则以整数格式输出，否则保留三位小数输出佣金金额。",
        "code": "whitebox_1.0.cpp"
      },
      {
        "version": "2.0",
        "description": "首先根据用户输入的本月销售额、请假天数和现金支付比例，将其划分到不同的条件分支，从而确定佣金因子（分母）和初始佣金计算规则；接着根据是否满足高销售额、高现金比例和低请假天数的组合，判断用户是否可以获得最优佣金比例，或在不满足条件时给予较低比例或不发放佣金；然后按照“销售额 ÷ 佣金因子”的方式计算实际佣金金额；最后判断佣金是否为整数，若是则以整数格式输出，否则保留三位小数输出佣金金额。",
        "code": "whitebox_2.0.cpp"
      },
      {
        "version": "3.0",
        "description": "首先根据用户输入的本月销售额、请假天数和现金支付比例，将其划分到不同的条件分支，从而确定佣金因子（分母）和初始佣金计算规则；接着根据是否满足高销售额、高现金比例和低请假天数的组合，判断用户是否可以获得最优佣金比例，或在不满足条件时给予较低比例或不发放佣金；然后按照“销售额 ÷ 佣金因子”的方式计算实际佣金金额；最后判断佣金是否为整数，若是则以整数格式输出，否则保留三位小数输出佣金金额。",
        "code": "whitebox_3.0.cpp"
      }
    ],
    "tests": [
      {
        "method": "语句覆盖",
        "testcases": "whitebox_Statement.csv"
      },
            {
        "method": "判断覆盖",
        "testcases": "whitebox_Decision.csv"
      },
            {
        "method": "条件覆盖",
        "testcases": "whitebox_Condition.csv"
      },
            {
        "method": "判断—条件覆盖",
        "testcases": "whitebox_DC.csv"
      },
            {
        "method": "条件组合覆盖",
        "testcases": "whitebox_Multiple.csv"
      }
    ]
  },
  "computer_sales": {
    "codes": [
      {
        "version": "1.0",
        "description": "首先根据用户输入的电脑型号和数量，判断输入是否越界，若输入合法则计算出总价；再根据总价范围判断佣金比例，并计算佣金。",
        "code": "computer_sales_1.0.cpp"
      }
    ],
    "tests": [
      {
        "method": "基本边界值-仅考虑输入变量",
        "testcases": "computer_sales_input_only.csv"
      },
      {
        "method": "基本边界值-考虑销售额边界反推输入",
        "testcases": "computer_sales_add_output.csv"
      }
    ]
  }
}
